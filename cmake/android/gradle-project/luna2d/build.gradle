apply plugin: 'com.android.library'

android {
	compileSdkVersion 23
	buildToolsVersion "23.0.2"

	defaultConfig {
		minSdkVersion 16
		targetSdkVersion 23
		versionCode 1
		versionName "1.0"
	}

	sourceSets {
		main {
			java.srcDirs = [
					"src/main/../../../../../../luna2d/platform/android/java",
					"src/main/../../../../../../luna2d/services/platform/android/java",
					"src/main/../../../../../../thirdparty/androidbilling/java",
					"src/main/../../../../../../thirdparty/appirater/android/java"
			]
			aidl.srcDirs =[ "src/main/../../../../../../thirdparty/androidbilling/aidl" ]
			resources.srcDirs = ["src/main/res"]
			manifest.srcFile 'src/main/AndroidManifest.xml'
		}
	}

	libraryVariants.all { variant ->
		variant.outputs.each { output ->
			def outputFile = output.outputFile

			if(outputFile != null && outputFile.name.endsWith('.aar')) {
				def buildType = "${variant.buildType.name}"
				def relativeOutputPath = "${outputFile.parent}/../../../../../../../lib/android/${buildType}"
				def outputPath = new File(relativeOutputPath).getCanonicalPath()
				def name = "${archivesBaseName}"

				if(buildType == "debug") {
					name = name + "d"
				}

				output.outputFile = new File(outputPath, name + ".aar")
			}
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug {
			minifyEnabled false
		}
	}

	task runCMake(type:Exec) {
		def scriptDir = "${projectDir}/../../"
		workingDir scriptDir
		commandLine "python", "gradlebuild.py"
	}

	tasks.withType(JavaCompile) {
		compileTask -> compileTask.dependsOn runCMake
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile 'com.google.android.gms:play-services-games:10.2.4'
	compile 'com.android.support:appcompat-v7:+'
}